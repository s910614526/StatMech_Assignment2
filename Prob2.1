import random
import time
import numpy as np
def NDie_diffS(trials):
    numberof_dice=random.randint(2,2)
 #   Problem 2.1 want 2 dices, with 4 and 6 sides, so I use line 8 instead of line 7 .
 #   Sides=np.random.choice(range(4,6), numberof_dice)
    Sides=[4,6]
    Max=max(Sides)
    
    print(Max)
    c1=time.clock()
    print("---------------------------------------------------")
    print("Number of sides = ", Sides)
    print("Number of trials = ", trials)
    print("Number of dices = ",    numberof_dice)
    
    histo = []
    
    for i in range(len(Sides)):
        histo.append([])
        
    for i in range( len(Sides)) :
        
        for s in range(Sides[i]):
            histo[i].append(0.0)
    
    r = 0
    
    for t in range(trials):
        for i in range(len(Sides)):
               r = random.randint(0,Sides[i]-1)
               histo[i][r]=histo[i][r] + 1
    H=np.array(histo)
    # line 36~40is to expand H into a square matrix that it would be much easier to calculate the sum. This square matrix has 
    # a dimension of Max ä¹˜ Max
    #line 38~42 is to sum the matirx for each sides.The result is the total number of each sides.
    def matrix(H, n):
        for row in H:
            yield row + [0] * (n - len(row))
        for i in range(len(H), n):
             yield [0] * n
    HH=list(matrix(H,Max))
    Hsum=[sum(x) for x in zip(*HH)]
    Prob=[round(x/Max,3) for x in Hsum]
    slist=list(range(1,len(Hsum)+1))
    print('Sides:',slist) 
    print('Probability of each sides',Prob)
 #   print(HH)
    print('Total number of each side',Hsum)
            
        
    
 
    
    
 
    c2=time.clock()
    print("Elapsed time =", c2-c1)



 
def run():
 
     NDie_diffS(3)
 
 
 
run()
